{"version":3,"sources":["Appointment.js","Appointments.js","SimpleMap.js","Image.js","App.js","serviceWorker.js","index.js"],"names":["Appointment","state","appointment","date","_this","props","time","area","fee","name","eName","clientAddress","appId","comment","internalComments","intComId","handleChange","event","preventDefault","newComment","Object","objectSpread","console","log","target","value","setState","handleChangeAppointmentData","newAppointmentData","handleSubmitAppointmentDate","input","axios","post","then","res","getAllAppointments","getAllComments","handleSubmit","handleEditComment","edit","patch","concat","handleEditDate","appointmentDate","deleteAppointmentData","delete","deleteComment","_this2","this","react_default","a","createElement","onSubmit","type","placeholder","onChange","onClick","Component","Appointments","appointments","map","i","src_Appointment","key","length","AnyReactComponent","_ref","text","SimpleMap","style","height","width","lib_default","apiKey","process","defaultCenter","center","defaultZoom","zoom","SimpleMap_AnyReactComponent","lat","lng","defaultProps","Image","image","newImage","getAllImages","imgId","src","alt","Span","styled","div","_templateObject","App","get","data","internalComment","src_Appointments","updateComment","src_SimpleMap","src_Image","id","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80d53615.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass Appointment extends Component {\n    state = {\n        appointment: {\n            date: this.props.appointment.date,\n            time: this.props.appointment.time,\n            area: this.props.appointment.area,\n            fee: this.props.appointment.fee,\n            name: this.props.appointment.name,\n            eName: this.props.appointment.eName,\n            clientAddress: this.props.appointment.clientAddress,\n            appId: this.props.appointment.appId,\n        },\n        comment: {\n            appId: this.props.appointment.appId,\n            comment: this.props.appointment.internalComments.comment,\n            intComId: this.props.appointment.internalComments.intComId,\n        }\n    }\n\n    handleChange = (event) => {\n        event.preventDefault()\n        const newComment = { ...this.state.comment }\n        console.log(\"posts here\", newComment)\n        newComment[event.target.name] = event.target.value\n        this.setState({ comment: newComment })\n    }\n\n    handleChangeAppointmentData = (event) => {\n        const newAppointmentData = { ...this.state.appointment }\n        newAppointmentData[event.target.name] = event.target.value\n        this.setState({ appointment: newAppointmentData })\n        console.log(this.state.appointment.date)\n    }\n\n    handleSubmitAppointmentDate = (event) => {\n        event.preventDefault()\n        const input = this.state.appointment\n        axios.post('api/v1/appointments/', input).then((res) => {\n            this.props.getAllAppointments()\n            this.props.getAllComments()\n\n        })\n\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault()\n        const newComment = this.state.comment\n        console.log(newComment)\n        axios.post(`/api/v1/internalComments/`, newComment)\n            .then(() => {\n                this.props.getAllAppointments()\n                this.props.getAllComments()\n            })\n    }\n\n    handleEditComment = (event) => {\n\n        event.preventDefault()\n        console.log(this.props.intComId)\n        const edit = this.state.comment\n        const intComId = this.props.intComId\n        console.log(edit)\n\n\n        axios.patch(`/api/v1/internalComments/${intComId}/`, edit)\n            .then(() => {\n                this.props.getAllAppointments()\n                this.props.getAllComments()\n            })\n    }\n\n    handleEditDate = (event) => {\n\n        event.preventDefault()\n        console.log(this.props.appointmentDate)\n        const edit = this.state.appointment\n        const appId = this.state.appointment.appId\n        console.log(edit)\n\n\n        axios.patch(`/api/v1/appointments/${appId}/`, edit)\n            .then(() => {\n                this.props.getAllAppointments()\n                this.props.getAllComments()\n            })\n    }\n    deleteAppointmentData = (event) => {\n        event.preventDefault()\n        const appId = this.props.appointment.appId\n        axios.delete(`/api/v1/appointments/${appId}/`)\n            .then(() => {\n                this.props.getAllAppointments()\n                this.props.getAllComments()\n            })\n\n    }\n\n    deleteComment = (event) => {\n        event.preventDefault()\n        const intComId = this.props.intComId\n        axios.delete(`/api/v1/internalComments/${intComId}/`)\n            .then(() => {\n                this.props.getAllAppointments()\n                this.props.getAllComments()\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n\n                <form onSubmit={this.handleSubmitAppointmentDate}>\n                    <div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Appointment Date\"\n                            name=\"date\"\n                            value={this.state.appointment.date}\n                            onChange={this.handleChangeAppointmentData}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Appointment Time\"\n                            name=\"time\"\n                            value={this.state.appointment.time}\n                            onChange={this.handleChangeAppointmentData}\n                        />\n\n                    </div>\n                    <button>Submit appointmentDate</button>\n\n                </form>\n\n\n                <h1>Appointment:</h1>\n                <ul>{this.props.appointment.date}</ul>\n                <ul>{this.props.appointment.time}</ul>\n                {/* <ul>{this.props.appointment.name}</ul>\n                <ul>{this.props.appointment.area}</ul> */}\n                <h1>{this.props.comment}</h1>\n                <button onClick={(event) => this.deleteAppointmentData(event)}>Delete</button>\n                <form onSubmit={this.handleEditComment}>\n                    <input\n                        type=\"text\"\n                        name='comment'\n                        placeholder=\"Your comment\"\n\n                        onChange={this.handleChange}\n                    />\n                    <button onClick={this.handleEditComment}>Edit</button>\n                    <button onClick={(event) => this.deleteComment(event)}>Delete</button>\n                </form>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        name='comment'\n                        placeholder=\"Your comment\"\n\n                        onChange={this.handleChange}\n                    />\n                    <button onClick={this.handleSubmit}>Submit</button>\n                </form>\n\n            </div>\n        );\n    }\n}\n\nexport default Appointment;","import React, { Component } from 'react';\nimport Appointment from './Appointment'\n\nclass Appointments extends Component {\n  render() {\n    // this.props.appointments.map((appointment, i) => {\n    //   console.log(appointment);\n    // })\n    return (\n      <div>\n        {this.props.appointments.map((appointment, i) => {\n          console.log(appointment)\n          return (\n            <Appointment key={i}\n              intComId={appointment.internalComments.length > 0\n                ? appointment.internalComments[0].intComId\n                : null}\n              appointment={appointment}\n              comment={appointment.internalComments.length > 0\n                ? appointment.internalComments[0].comment\n                : null}\n\n\n              getAllAppointments={this.props.getAllAppointments}\n              getAllComments={this.props.getAllComments}\n            />\n          )\n        }\n        )}\n      </div>\n    )\n  }\n}\n\n\nexport default Appointments;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react'\n\nconst AnyReactComponent = ({ text }) => <div> {text} </div>;\n\nclass SimpleMap extends Component {\n    \n    static defaultProps = {\n        center: {\n            lat: 33.7490,\n            lng: -84.3880\n        },\n        zoom: 11\n    };\n\n    render() {\n        const API_KEY = process.env.REACT_APP_MAP_API_KEY\n\n        return (\n\n            \n                <div style = {{ height: '25vh', width: '100%'}}>\n                    <GoogleMapReact\n                        apiKey={API_KEY}\n                        defaultCenter={this.props.center}\n                        defaultZoom={this.props.zoom}\n                    >\n\n                        <AnyReactComponent\n                        lat={59.955413}\n                        lng={30.337844}\n                        text={'Kreyser'}\n                        />\n                </GoogleMapReact>\n                </div>\n\n            \n        );\n    }\n}\n\nexport default SimpleMap;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Image extends Component {\n\n    state = {\n        image: {\n            image: this.props.image.image\n            // imgId: this.props.image.imgId\n        }\n    }\n\n\n    handleChange = (event) => {\n        event.preventDefault()\n        const newImage = { ...this.state.image }\n\n        newImage[event.target.name] = event.target.value\n        console.log(this.state.image)\n        this.setState({ image: newImage })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const input = this.state.image\n        axios.post('api/v1/images/', input)\n            .then(console.log(input))\n            .then((res) => {\n\n                this.props.getAllImages()\n\n            })\n\n    }\n\n    deleteComment = (event) => {\n        event.preventDefault()\n        axios.delete(`/api/v1/images/${this.props.imgId}/`)\n            .then(() => {\n                this.props.getAllImages()\n            })\n\n    }\n\n\n    render() {\n        // var imageName = require(this.props.image)\n        return (\n            <div>\n\n                <img src={this.props.image} alt=\"MEC\" />\n\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Image Url\"\n                            name=\"image\"\n                            value={this.state.image.image}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <button>Submit</button>\n                    <button onClick={(event) => this.deleteComment(event)}>Delete</button>\n                </form>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Image;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Appointments from './Appointments';\n// import Appointment from './Appointment';\n// import Comments from './Comments';\nimport './App.css';\nimport SimpleMap from './SimpleMap';\nimport Image from './Image';\nimport styled from 'styled-components';\n\nconst Span = styled.div`\ntext-align: \"center\";\nposition: absolute;\ntop: 10%;\nmargin-left: 20%;\nmargin-right: 15%;\nfont-weight: bold;\nfont-size: 16px;\nfont-family: Courier New;\n\n`\n\n\nclass App extends Component {\n\n  state = {\n    appointments: [{\n      appId: 1,\n      date: \"February 10, 2019\",\n      time: \"10:00 PM\",\n      area: \"chin\",\n      fee: 100,\n      name: \"Cindy\",\n      eName: \"Ahoova\",\n      clientAddress: \"string\",\n      internalComments: [{\n        appId: 1,\n        intComId: 1,\n        comment: \"string\",\n      }],\n    }],\n    image: [{\n      image: \"string\"\n      // imgId: 1\n    }],\n  }\n\n  componentDidMount() {\n    this.getAllAppointments()\n    console.log(\"running\")\n    this.getAllComments()\n    this.getAllImages()\n  }\n\n\n\n  getAllAppointments = () => {\n    axios.get(\"/api/v1/appointments/\").then(res => {\n      console.log(\"get all appointments returns: \" + res.data)\n      this.setState({ appointments: res.data });\n      console.log(this.state.appointments)\n    });\n  }\n\n  getAllComments = () => {\n    axios.get(\"/api/v1/internalComments/\").then(res => {\n      console.log(\"get all appointments returns: \" + res.data)\n      this.setState({ internalComment: res.data });\n      console.log(this.state.internalComment)\n    });\n  }\n\n  getAllImages = () => {\n    axios.get(\"/api/v1/images/\").then(res => {\n      console.log(\"get all images returns: \" + res.data)\n      this.setState({ image: res.data });\n      console.log(this.state.image)\n    });\n  }\n\n\n  render() {\n\n    return (\n\n<Span>\n      <div>\n\n\n\n\n        <Appointments\n          appointments={this.state.appointments}\n          getAllAppointments={this.getAllAppointments}\n          getAllComments={this.getAllComments}\n          updateComment={this.updateComment}\n\n        />\n\n        <SimpleMap />\n\n        {this.state.image.map((image, i) => {\n          return (\n            <Image\n              key={i}\n              image={image.image}\n              getAllImages={this.getAllImages}\n              imgId={image.id}\n            />\n\n          )\n        }\n        )}\n\n      </div>\n      </Span>      \n\n\n    )\n\n\n\n\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}